<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ZhaoYi的树洞</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-07T08:26:41.334Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Zhao Yi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【转载】mark一下其他人的文章</title>
    <link href="http://example.com/2021/08/07/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91mark%E4%B8%80%E4%B8%8B%E5%85%B6%E4%BB%96%E4%BA%BA%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    <id>http://example.com/2021/08/07/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91mark%E4%B8%80%E4%B8%8B%E5%85%B6%E4%BB%96%E4%BA%BA%E7%9A%84%E6%96%87%E7%AB%A0/</id>
    <published>2021-08-07T08:23:52.000Z</published>
    <updated>2021-08-07T08:26:41.334Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>mark一下其他人的文章</p></blockquote><h1 id="一、Java基础"><a href="#一、Java基础" class="headerlink" title="一、Java基础"></a>一、Java基础</h1><ol><li><a href="https://www.cnblogs.com/fsmly/p/11020641.html">Java中的ThreadLocal详解</a></li><li><a href="https://blog.csdn.net/qq_44543508/article/details/102831084?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162812387916780357242286%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162812387916780357242286&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-102831084.first_rank_v2_pc_rank_v29&utm_term=io%E6%B5%81&spm=1018.2226.3001.4187">史上最骚最全最详细的IO流教程，小白都能看懂！</a></li><li><a href="https://www.bilibili.com/video/BV1mC4y1H7QC">马士兵2020520最新JVM合集史上最全JVM面试进阶合集</a></li><li><a href="https://www.bilibili.com/video/BV1Uy4y1j7bg?from=search&seid=3578421369475126194">程序员都要会的TCPIP协议…….</a></li></ol><h1 id="二、算法数据结构"><a href="#二、算法数据结构" class="headerlink" title="二、算法数据结构"></a>二、算法数据结构</h1><h1 id="三、框架"><a href="#三、框架" class="headerlink" title="三、框架"></a>三、框架</h1><ol><li><a href="https://blog.csdn.net/qq_36691683/article/details/82705901">Spring Cloud 之Eureka集群整合Zuul、Feign</a></li><li><a href="https://www.jianshu.com/p/31dfb595170c">一文读懂SpringCloud与Eureka，Feign，Ribbon，Hystrix，Zuul核心组件间的关系</a></li><li><a href="https://blog.csdn.net/walkerJong/article/details/7520896?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162807050716780261959028%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162807050716780261959028&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-7520896.first_rank_v2_pc_rank_v29&utm_term=requestbody%20responsebody&spm=1018.2226.3001.4187">@RequestBody, @ResponseBody 注解详解</a></li><li><a href="https://blog.csdn.net/jy02268879/article/details/82830789?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-2.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-2.control">Spring Boot之 Controller 接收参数和返回数据总结(包括上传、下载文件)</a></li><li><a href="https://blog.csdn.net/zxylwj/article/details/98606224?ops_request_misc=&request_id=&biz_id=102&utm_term=springcloud%20%E7%99%BB%E5%BD%95&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-9-.first_rank_v2_pc_rank_v29&spm=1018.2226.3001.4187">SpringCloud_Zuul网关（二） 实现统一用户登录中心</a></li><li><a href="https://blog.didispace.com/spring-cloud-starter-dalston-1/">==《SpringCloud实战教程》==</a></li><li><a href="https://www.iocoder.cn/Spring-Data-JPA/good-collection/">==源码学习==</a></li></ol><h1 id="四、前端"><a href="#四、前端" class="headerlink" title="四、前端"></a>四、前端</h1><p>x</p><h1 id="五、其他"><a href="#五、其他" class="headerlink" title="五、其他"></a>五、其他</h1><ol><li><a href="https://www.ruanyifeng.com/blog/2016/04/cors.html">跨域资源共享 CORS 详解</a></li><li><a href="https://www.bilibili.com/video/BV1av411r7yB?from=search&seid=1364857070248055456">一天学完 PostgreSQL</a></li><li><a href="https://blog.csdn.net/sinat_38259539/article/details/77481307?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control">调试接口==（关于前端传递list的json后端如何接收）</a></li><li><a href="https://www.giserdqy.com/gis/gisknowledge/6595/">GIS基础知识</a></li><li><a href="https://blog.csdn.net/qq_35190492/article/details/105186878">【阿里P6面经】二本，curd两年，疯狂复习，拿下阿里offer</a></li><li><a href="https://blog.csdn.net/aijiudu/article/details/72991993?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromMachineLearnPai2~default-1.control">JVM架构和GC垃圾回收机制(JVM面试不用愁)</a></li><li><a href="https://blog.csdn.net/zl_momomo/article/details/83583308?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162824317616780274178137%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162824317616780274178137&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-83583308.first_rank_v2_pc_rank_v29&utm_term=yml%20ConfigurationProperties&spm=1018.2226.3001.4187">yml语法及yml属性值自动注入@ConfigurationPropertie</a></li><li><a href="https://www.bilibili.com/read/cv960192">B站视频制作教程推荐—–何同学</a></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;mark一下其他人的文章&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一、Java基础&quot;&gt;&lt;a href=&quot;#一、Java基础&quot; class=&quot;headerlink&quot; title=&quot;一、Java基础&quot;&gt;&lt;/a&gt;一、Java基础&lt;/h1&gt;&lt;o</summary>
      
    
    
    
    <category term="书签" scheme="http://example.com/categories/%E4%B9%A6%E7%AD%BE/"/>
    
    
    <category term="转载" scheme="http://example.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
  </entry>
  
  <entry>
    <title>【原创】【Jave】Object类的思考，hashCode为什么要放进类中</title>
    <link href="http://example.com/2021/08/06/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E3%80%90Jave%E3%80%91Object%E7%B1%BB%E7%9A%84%E6%80%9D%E8%80%83%EF%BC%8ChashCode%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%94%BE%E8%BF%9B%E7%B1%BB%E4%B8%AD/"/>
    <id>http://example.com/2021/08/06/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E3%80%90Jave%E3%80%91Object%E7%B1%BB%E7%9A%84%E6%80%9D%E8%80%83%EF%BC%8ChashCode%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E6%94%BE%E8%BF%9B%E7%B1%BB%E4%B8%AD/</id>
    <published>2021-08-06T12:25:08.000Z</published>
    <updated>2021-08-07T08:57:09.132Z</updated>
    
    <content type="html"><![CDATA[<p>哈哈，back to Java 了。前些日子面试遇到一个问题一直想记录一下，问我对 Object 类了解多少。<br>我复习的时候漏掉了这部分内容，就按照记忆说了一下 Java 语言是按照单根的设计思想设计的，Object 类是所有类的最终父类，然后说了几个类里边的方法。<br>然后就有了如下对话（大概意思）：</p><p>BOSS：你刚才提到了 toString() 方法，那你在哪用过呢？<br>我：写在 bean 类里边，用来打印日志。</p><p>BOSS：还有用在其他什么地方吗？<br>我：好像是没有了</p><p>BOSS：那么我问你一下啊，toString() 我们平时也就用在打印一些日志，所以说他的使用场景是很少的，那么为什么要把他放进 Object 类里呢？<br>我：..因为所有类都会继承 Object 类，所以在需要用到这个方法的时候可以拿来就用？</p><p>BOSS：那我再问你哈，Object 类中的 hashCode() 方法，是用来散列的对吧，大部分情况就是用来保存到数组时候用的，那为什么不把这个方法放进数组的接口里，而要放进 Object 类？<br>我：….（思考无果）</p><p>BOSS：你用设计者的思想来想一下？<br>我：….（思考无果）</p><p>↑ 以上。</p><p>这个问题直接给我问住了，从来没有想过这个问题，时候又从网上查了查，但都是一些介绍类介绍方法的帖子，没有关于设计思想的回答。属实很迷。<br>记录一下吧，如果有大佬会，希望赐教一下~<br>或者日后要是看哪本书的时候看到了解释，再回来更新。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;哈哈，back to Java 了。前些日子面试遇到一个问题一直想记录一下，问我对 Object 类了解多少。&lt;br&gt;我复习的时候漏掉了这部分内容，就按照记忆说了一下 Java 语言是按照单根的设计思想设计的，Object 类是所有类的最终父类，然后说了几个类里边的方法。&lt;</summary>
      
    
    
    
    <category term="Java" scheme="http://example.com/categories/Java/"/>
    
    
    <category term="原创" scheme="http://example.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>【感想】Salesforce END</title>
    <link href="http://example.com/2021/06/24/%E3%80%90%E6%84%9F%E6%83%B3%E3%80%91Salesforce-END/"/>
    <id>http://example.com/2021/06/24/%E3%80%90%E6%84%9F%E6%83%B3%E3%80%91Salesforce-END/</id>
    <published>2021-06-24T09:47:32.000Z</published>
    <updated>2021-06-29T10:06:31.402Z</updated>
    
    <content type="html"><![CDATA[<p>2个多月的体验服到期咯，体验下来这个东西还真是好用啊，功能丰富，简化代码。可惜数据都存在美国、日本了，国内公司不敢用啊！也不知道跟阿里的合作会怎么展开，期待一下吧。</p><p>没能继续干，有点可惜，还没来得及把学到的知识输出到博客和项目中，就匆匆结束了。没办法，只能说不合适吧！</p><p>不过这两个多月，也摸到了一些学习salesefoce的门道，不深，但是如果有新人碰巧也在入门中，且在迷茫，看到了我的帖子，可以从个人页加我微信交流~我会把我的经验都告诉你的！（在我忘记之前^-^）毕竟目前国内学习渠道还很少，有也花钱。</p><p>今天离开公司，仔细回忆了一下。这两个多月，收获其实还挺大的，至少阅读英文文档顺畅多了。这翻译过来的内容果然有出入x_x。以后遇到问题首选Google了要。</p><p>就到这吧，farewell~ ////</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2个多月的体验服到期咯，体验下来这个东西还真是好用啊，功能丰富，简化代码。可惜数据都存在美国、日本了，国内公司不敢用啊！也不知道跟阿里的合作会怎么展开，期待一下吧。&lt;/p&gt;
&lt;p&gt;没能继续干，有点可惜，还没来得及把学到的知识输出到博客和项目中，就匆匆结束了。没办法，只能说不</summary>
      
    
    
    
    <category term="Salesforce" scheme="http://example.com/categories/Salesforce/"/>
    
    
    <category term="原创" scheme="http://example.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="Salesforce" scheme="http://example.com/tags/Salesforce/"/>
    
  </entry>
  
  <entry>
    <title>【Salseforce】Batch</title>
    <link href="http://example.com/2021/05/09/%E3%80%90Salseforce%E3%80%91Batch/"/>
    <id>http://example.com/2021/05/09/%E3%80%90Salseforce%E3%80%91Batch/</id>
    <published>2021-05-09T14:09:14.000Z</published>
    <updated>2021-05-09T14:40:10.537Z</updated>
    
    <content type="html"><![CDATA[<hr><p><strong><em>下述内容皆为个人学习用，水平有限，出现错误希望大家见谅并回复指教~<br>相互学习，不胜感激！</em></strong></p><hr><h2 id="1-Batch-Apex"><a href="#1-Batch-Apex" class="headerlink" title="1.Batch Apex"></a>1.Batch Apex</h2><p>salesforce ( 简称 sf ) 是一个多租户的平台，大家共享服务器资源，因此在设计时，多了一个 <strong>Apex Governor Limits</strong> 的限制。</p><blockquote><p><strong>Apex Governor Limits</strong>： <a href="https://developer.salesforce.com/docs/atlas.en-us.salesforce_app_limits_cheatsheet.meta/salesforce_app_limits_cheatsheet/salesforce_app_limits_platform_apexgov.htm">https://developer.salesforce.com/docs/atlas.en-us.salesforce_app_limits_cheatsheet.meta/salesforce_app_limits_cheatsheet/salesforce_app_limits_platform_apexgov.htm</a></p></blockquote><p> 而Batch Apex就是用来解决query大数据量时被限制的问题的。具体介绍在下边：</p><blockquote><p><strong>Batch Apex</strong>：<a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_batch_interface.htm">https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_batch_interface.htm</a></p></blockquote><hr><p><strong>笔记</strong></p><p>最后在调用的时候要这样写： </p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Apex">Database.executeBatch(new TestBatch(), 5); <br></code></pre></div></td></tr></table></figure><p>两个参数，第一个为我们自定义的batch。第二个是设置查询出来的数据每次进入execute()方法几条记录。打个比方，我们使用batch查询100条数据，上边设置为5，这样batch会在查询出100条记录以后，调用20次execute()方法，一次传入5条记录。全部执行完毕之后再调用finish()方法。</p><p>因此在一些场景下，比如汇总所有Account下Contract的总金额时，需要为<strong>每一个</strong>Account汇总他自己拥有的Contract的总金额，应该在batch一开始写查询语句时，<strong>查的是Account对象</strong>，因为如果反过来查Contract的话，会出现查询结果超过5条，这样execute()得到的数据就不全，方法中的逻辑就一定会是错的！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;下述内容皆为个人学习用，水平有限，出现错误希望大家见谅并回复指教~&lt;br&gt;相互学习，不胜感激！&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;1-Batch-Apex&quot;&gt;&lt;a href=&quot;#1-Batch-Apex&quot; cla</summary>
      
    
    
    
    <category term="Salesforce" scheme="http://example.com/categories/Salesforce/"/>
    
    
    <category term="原创" scheme="http://example.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="Salesforce" scheme="http://example.com/tags/Salesforce/"/>
    
  </entry>
  
  <entry>
    <title>【感想】新的开始，Salesforce</title>
    <link href="http://example.com/2021/05/09/%E3%80%90%E6%84%9F%E6%83%B3%E3%80%91%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B%EF%BC%8CSalesforce/"/>
    <id>http://example.com/2021/05/09/%E3%80%90%E6%84%9F%E6%83%B3%E3%80%91%E6%96%B0%E7%9A%84%E5%BC%80%E5%A7%8B%EF%BC%8CSalesforce/</id>
    <published>2021-05-09T14:06:45.000Z</published>
    <updated>2021-06-29T10:59:42.896Z</updated>
    
    <content type="html"><![CDATA[<p>唯一一份Java实习已经结束有一段日子了，学习salesforce也一个多月了。</p><p>临近毕业，工作，生活和学习中都有很多事情要忙，博客一直都没有写，没想到这一拖，拖到现在写的第一篇技术文章都不是Java了，事情的发展还真是难以预料啊。</p><p>现在用到的技术语法与Java有相似的地方，所以上手不是太难，但是继续学习下去还是要勤奋坚持的，毕竟本人愚钝，而且学习环境还是英文，每次查个bug还要借用梯子。。</p><p>这个时候，我又想起大一大二在KFC兼职时候的事情了，第一份领工资的地方。在入职前忐忑不安，害怕会怯场。上班之后遇见一个大我两岁的学长跟我说“这是工作，不是玩儿”，听完这话我好像悟了点什么，当天晚上睡觉前我就下定决心要早日做到独当一面，哈哈，这个词感觉真帅，最后也确实做到了。</p><p>所以这次也加油吧！</p><hr><p>至于博客以后的方向，还是多发一些自己的学习体会吧，记录下来避免忘记。<br>内容多是sf知识，但是等过些日子，得了空，还是要深入学习计算机基础的。算法，数据结构，计算机网络，数据库，Python，AI等等等等。而且Java学了那么久，也有感情了，打算再写个项目维护下去。所以这些也会在博客体现吧，希望可以做到。不过大概率还是龟速更新的哈哈。。。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;唯一一份Java实习已经结束有一段日子了，学习salesforce也一个多月了。&lt;/p&gt;
&lt;p&gt;临近毕业，工作，生活和学习中都有很多事情要忙，博客一直都没有写，没想到这一拖，拖到现在写的第一篇技术文章都不是Java了，事情的发展还真是难以预料啊。&lt;/p&gt;
&lt;p&gt;现在用到的技</summary>
      
    
    
    
    <category term="Salesforce" scheme="http://example.com/categories/Salesforce/"/>
    
    
    <category term="原创" scheme="http://example.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="Salesforce" scheme="http://example.com/tags/Salesforce/"/>
    
  </entry>
  
  <entry>
    <title>【转载】【Linux】常用命令</title>
    <link href="http://example.com/2021/04/24/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E3%80%90Linux%E3%80%91%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://example.com/2021/04/24/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E3%80%90Linux%E3%80%91%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</id>
    <published>2021-04-24T14:15:02.000Z</published>
    <updated>2021-06-29T10:35:29.456Z</updated>
    
    <content type="html"><![CDATA[<h2 id="转载一篇Linux常用命令放在博客里吧，又学了一遍，不过这东西用不上太容易忘了，记录一下吧"><a href="#转载一篇Linux常用命令放在博客里吧，又学了一遍，不过这东西用不上太容易忘了，记录一下吧" class="headerlink" title="转载一篇Linux常用命令放在博客里吧，又学了一遍，不过这东西用不上太容易忘了，记录一下吧"></a><strong><em>转载一篇Linux常用命令放在博客里吧，又学了一遍，不过这东西用不上太容易忘了，记录一下吧</em></strong></h2><h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><p>1.说出10个linux常用的指令</p><ul><li><p>ls 查看目录中的文件</p></li><li><p>cd /home 进入 ‘/ home’ 目录；cd .. 返回上一级目录；cd ../.. 返回上两级目录</p></li><li><p>mkdir dir1 创建一个叫做 ‘dir1’ 的目录</p></li><li><p>rmdir dir1 删除一个叫做 ‘dir1’ 的目录 （只能删除空目录）</p></li><li><p>rm -f file1 删除一个叫做 ‘file1’ 的文件’，-f 参数，忽略不存在的文件，从不给出提示。</p></li><li><p>rm -rf /mulu  目录下面文件以及子目录下文件</p></li><li><p>cp /test1/file1 /test3/file2<br>如将/test1目录下的file1复制到/test3目录，并将文件名改为file2</p></li><li><p>mv /test1/file1 /test3/file2  如将/test1目录下的file1移动到/test3<br>目录，并将文件名改为file2</p></li><li><p>mv * ../ Linux当前目录所有文件移动到上一级目录</p></li><li><p>ps -ef|grep xxx 显示进程pid</p></li><li><p>kill  使用kill命令来终结进程。先使用ps命令找到进程id，使用kill -9命令，终止进程。</p></li><li><p>tar –xvf file.tar  解压 tar包</p></li><li><p>unzip file.zip 解压zip</p></li><li><p>unrar e file.rar 解压rar</p></li><li><p>free -m  查看服务器内存使用情况</p></li></ul><h2 id="ps查看进程"><a href="#ps查看进程" class="headerlink" title="ps查看进程"></a>ps查看进程</h2><p>2.如何查看所有java进程</p><ul><li>grep是搜索关键字</li></ul><blockquote><p>ps -ef | grep java</p></blockquote><ul><li>-aux 显示所有状态</li></ul><blockquote><p>ps -aux | grep java</p></blockquote><h2 id="kill-杀掉进程"><a href="#kill-杀掉进程" class="headerlink" title="kill 杀掉进程"></a>kill 杀掉进程</h2><p>3.如何杀掉某个服务的进程</p><ul><li><p>kill 命令用于终止进程</p></li><li><p>-9 强迫进程立即停止</p></li></ul><blockquote><p>kill -9 [PID]</p></blockquote><p>这里pid需要用 ps -ef | grep 查询pid<br><img src="https://img-blog.csdnimg.cn/20210629182734597.png#pic_center" alt="在这里插入图片描述"></p><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><p>4.如何启动服务</p><p>以启动Tomcat为例,先cd到启动的.sh文件目录</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">&gt;</span><span class="bash"> <span class="hljs-built_in">cd</span> /java/tomcat/bin</span><br><span class="hljs-meta">&gt;</span><span class="bash"> ./startup.sh</span><br></code></pre></div></td></tr></table></figure><p>停止Tomcat服务命令</p><figure class="highlight shell"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs shell"><span class="hljs-meta">&gt;</span><span class="bash"> ./shutdown.sh</span><br></code></pre></div></td></tr></table></figure><h2 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h2><p>5.如何查看测试项目的日志</p><p>一般测试的项目里面，有个logs的目录文件，会存放日志文件，有个xxx.out的文件，可以用tail -f 动态实时查看后端日志</p><p>先cd 到logs目录(里面有xx.out文件)</p><blockquote><p>tail -f xx.out</p></blockquote><p>这时屏幕上会动态实时显示当前的日志，ctr+c停止</p><p>6.如何查看最近1000行日志</p><blockquote><p>tail -1000 xx.out</p></blockquote><h2 id="查看端口"><a href="#查看端口" class="headerlink" title="查看端口"></a>查看端口</h2><p>7.LINUX中如何查看某个端口是否被占用</p><blockquote><p>netstat  -anp  | grep   端口号<br><img src="https://img-blog.csdnimg.cn/20210629183051434.png#pic_center" alt="在这里插入图片描述"></p></blockquote><p><strong>图中主要看监控状态为LISTEN表示已经被占用，最后一列显示被服务mysqld占用，查看具体端口号，只要有如图这一行就表示被占用了</strong></p><p>查看82端口的使用情况，如图</p><blockquote><p>netstat  -anp  |grep  82<br><img src="https://img-blog.csdnimg.cn/20210629183130704.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE5MDAxMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></blockquote><p><strong>可以看出并没有LISTEN那一行，所以就表示没有被占用。此处注意，图中显示的LISTENING并不表示端口被占用，不要和LISTEN混淆哦，查看具体端口时候，必须要看到tcp，端口号，LISTEN那一行，才表示端口被占用了</strong></p><p>查看当前所有已经使用的端口情况，如图：</p><blockquote><p>netstat   -nultp（此处不用加端口号）<br><img src="https://img-blog.csdnimg.cn/20210629183155833.png#pic_center" alt="在这里插入图片描述"></p></blockquote><h2 id="find查找文件"><a href="#find查找文件" class="headerlink" title="find查找文件"></a>find查找文件</h2><p>8.如何查找一个文件大小超过5M的文件</p><blockquote><p>find . -type f -size +100M</p></blockquote><p>9.如果知道一个文件名称，怎么查这个文件在linux下的哪个目录，如：要查找tnsnames.ora文件</p><blockquote><p>find / -name tnsnames.ora</p></blockquote><p>查到：<br>/opt/app/oracle/product/10.2/network/admin/tnsnames.ora<br>/opt/app/oracle/product/10.2/network/admin/samples/tnsnames.ora</p><p>还可以用locate 来查找</p><blockquote><p>locate tnsnames.ora</p></blockquote><p>结果是：<br>/opt/app/oracle/product/10.2/hs/admin/tnsnames.ora.sample<br>/opt/app/oracle/product/10.2/network/admin/tnsnames.ora<br>/opt/app/oracle/product/10.2/network/admin/samples/tnsnames.ora</p><p>10.find查找文件</p><p>find / -name httpd.conf　　#在根目录下查找文件httpd.conf，表示在整个硬盘查找<br>find /etc -name httpd.conf　　#在/etc目录下文件httpd.conf<br>find /etc -name ‘srm‘　　#使用通配符(0或者任意多个)。表示在/etc目录下查找文件名中含有字符串‘srm’的文件<br>find . -name ‘srm‘ 　　#表示当前目录下查找文件名开头是字符串‘srm’的文件</p><p>按照文件特征查找 　　　　<br>find / -amin -10 　　# 查找在系统中最后10分钟访问的文件(access time)<br>find / -atime -2　　 # 查找在系统中最后48小时访问的文件<br>find / -empty 　　# 查找在系统中为空的文件或者文件夹<br>find / -group cat 　　# 查找在系统中属于 group为cat的文件<br>find / -mmin -5 　　# 查找在系统中最后5分钟里修改过的文件(modify time)<br>find / -mtime -1 　　#查找在系统中最后24小时里修改过的文件<br>find / -user fred 　　#查找在系统中属于fred这个用户的文件<br>find / -size +10000c　　#查找出大于10000000字节的文件(c:字节，w:双字，k:KB，M:MB，G:GB)<br>find / -size -1000k 　　#查找出小于1000KB的文件</p><h2 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h2><p>查看文件内容的命令：</p><p><strong>cat     由第一行开始显示内容，并将所有内容输出   （之前公司用的比较多）</strong></p><p>tac     从最后一行倒序显示内容，并将所有内容输出</p><p>more    根据窗口大小，一页一页的现实文件内容</p><p>less    和more类似，但其优点可以往前翻页，而且进行可以搜索字符</p><p>head    只显示头几行</p><p>tail    只显示最后几行                             <strong>（之前公司用的比较多）</strong></p><p>nl      类似于cat -n，显示时输出行号</p><p>tailf   类似于tail -f     </p><p>查看命令下一步其实就是编辑，但是编辑命令涉及比较多，参考文章：Linux文件编辑命令vi详细说明</p><h2 id="1-cat-与-tac"><a href="#1-cat-与-tac" class="headerlink" title="1.cat 与 tac"></a>1.cat 与 tac</h2><p>cat的功能是将文件从第一行开始连续的将内容输出在屏幕上。但是cat并不常用，原因是当文件大，行数比较多时，屏幕无法全部容下时，只能看到一部分内容。</p><p><strong>cat语法</strong>：cat [-n]  文件名 （-n ： 显示时，连行号一起输出）</p><p>tac的功能是将文件从最后一行开始倒过来将内容数据输出到屏幕上。我们可以发现，tac实际上是cat反过来写。这个命令也不常用。</p><p><strong>tac语法</strong>：tac 文件名。</p><p><strong>2.more和less（常用）</strong><br>more的功能是将文件从第一行开始，根据输出窗口的大小，适当的输出文件内容。当一页无法全部输出时，可以用“回车键”向下翻行，用“空格键”向下翻页。退出查看页面，请按“q”键。另外，more还可以配合管道符“|”（pipe）使用，例如:ls -al | more</p><p>more的语法：more 文件名</p><p>Enter 向下n行，需要定义，默认为1行； </p><p>Ctrl f 向下滚动一屏； </p><p>空格键 向下滚动一屏； </p><p>Ctrl b 返回上一屏； </p><p>= 输出当前行的行号； </p><p>:f 输出文件名和当前行的行号； </p><p>v 调用vi编辑器； </p><p>! 命令 调用Shell，并执行命令； </p><p>q 退出more</p><p>less的功能和more相似，但是使用more无法向前翻页，只能向后翻。</p><p>less可以使用【pageup】和【pagedown】键进行前翻页和后翻页，这样看起来更方便。</p><p>less的语法：less 文件名</p><p>less还有一个功能，可以在文件中进行搜索你想找的内容，假设你想在passwd文件中查找有没有weblogic字符串，那么你可以这样来做：</p><p>[root@redhat etc]# less passwd</p><p>然后输入：</p><p>/weblogic</p><p>回车</p><p>此时如果有weblogic字符串，linux会把该字符已高亮方式显示。</p><p>退出查看页面，请按“q”键。</p><p><strong>3.head和tail</strong><br>head和tail通常使用在只需要读取文件的前几行或者后几行的情况下使用。head的功能是显示文件的前几行内容</p><p>head的语法：head [n number] 文件名 (number 显示行数)</p><p>tail的功能恰好和head相反，只显示最后几行内容</p><p>tail的语法:tail [-n number] 文件名</p><p><strong>4.nl</strong><br>nl的功能和cat -n一样，同样是从第一行输出全部内容，并且把行号显示出来</p><p>nl的语法：nl 文件名</p><p><strong>5.tailf</strong><br>　tailf命令几乎等同于tail -f，严格说来应该与tail –follow=name更相似些。当文件改名之后它也能继续跟踪，特别适合于日志文件的跟踪（follow the growth of a log file）。与tail -f不同的是，如果文件不增长，它不会去访问磁盘文件（It is similar to tail -f but does not access the file when it is not growing.  This has the side effect of not updating the access  time for the file, so a filesystem flush does not occur periodically when no log activity is happening.）。tailf特别适合那些便携机上跟踪日志文件，因为它能省电，因为减少了磁盘访问嘛（tailf  is extremely useful for monitoring log files on a laptop when logging is infrequent and the user desires that the hard disk spin down to conserve battery life.）。tailf命令不是个脚本，而是一个用C代码编译后的二进制执行文件，某些Linux安装之后没有这个命令，本文提供了怎么编译安装tailf命令的方法。<br>————————————————</p><blockquote><p>版权声明：本文为CSDN博主「yunlive」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/u012106306/article/details/94722068">https://blog.csdn.net/u012106306/article/details/94722068</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;转载一篇Linux常用命令放在博客里吧，又学了一遍，不过这东西用不上太容易忘了，记录一下吧&quot;&gt;&lt;a href=&quot;#转载一篇Linux常用命令放在博客里吧，又学了一遍，不过这东西用不上太容易忘了，记录一下吧&quot; class=&quot;headerlink&quot; title=&quot;转载</summary>
      
    
    
    
    <category term="Linux" scheme="http://example.com/categories/Linux/"/>
    
    
    <category term="转载" scheme="http://example.com/tags/%E8%BD%AC%E8%BD%BD/"/>
    
    <category term="Linux" scheme="http://example.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>【转载】【MySQL】修改MySQL密码</title>
    <link href="http://example.com/2021/02/19/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E3%80%90MySQL%E3%80%91%E4%BF%AE%E6%94%B9MySQL%E5%AF%86%E7%A0%81/"/>
    <id>http://example.com/2021/02/19/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E3%80%90MySQL%E3%80%91%E4%BF%AE%E6%94%B9MySQL%E5%AF%86%E7%A0%81/</id>
    <published>2021-02-19T15:25:00.000Z</published>
    <updated>2021-06-29T15:25:32.121Z</updated>
    
    <content type="html"><![CDATA[<p>第一次用这种方式修改密码，是在学校的时候，有一次上SSM课，某些教室内的电脑mysql密码跟其他人不同（包括我），然后就无法继续下去，老师就叫我查一下有没有办法解决。然后找到的办法。当时还挺有成就感哈哈。</p><p>所以大家在自己练习的过程中，如果忘记mysql密码，可以用下边方法跳过权限，直接修改密码。<br>这是mysql5.1的方法，其他版本忘记有没有区别辽 QAQ</p><p><strong>步骤</strong>：</p><ol><li>关闭mysql服务</li><li>打开cmd，粘贴下边代码（路径记得换）</li></ol><figure class="highlight taggerscript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs taggerscript">cd C:<span class="hljs-symbol">\P</span>rogram Files<span class="hljs-symbol">\M</span>ySQL<span class="hljs-symbol">\M</span>ySQL Server 5.1<span class="hljs-symbol">\b</span>in<br>mysqld --skip-grant-tables<br></code></pre></div></td></tr></table></figure><ol start="3"><li>上一个cmd窗口不动，打开一个新的cmd，粘贴下边代码</li></ol><figure class="highlight n1ql"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs n1ql">cd C:\Program Files\MySQL\MySQL Server 5.1\bin<br>mysql<br>use mysql;<br><span class="hljs-keyword">update</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">set</span> <span class="hljs-keyword">password</span>=<span class="hljs-keyword">password</span>(<span class="hljs-string">&#x27;1234&#x27;</span>) <span class="hljs-keyword">where</span> <span class="hljs-keyword">user</span>=<span class="hljs-string">&#x27;root&#x27;</span> <span class="hljs-keyword">and</span> host=<span class="hljs-string">&#x27;localhost&#x27;</span>;<br></code></pre></div></td></tr></table></figure><ol start="4"><li>重启mysql服务 </li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第一次用这种方式修改密码，是在学校的时候，有一次上SSM课，某些教室内的电脑mysql密码跟其他人不同（包括我），然后就无法继续下去，老师就叫我查一下有没有办法解决。然后找到的办法。当时还挺有成就感哈哈。&lt;/p&gt;
&lt;p&gt;所以大家在自己练习的过程中，如果忘记mysql密码，可</summary>
      
    
    
    
    <category term="MySQL" scheme="http://example.com/categories/MySQL/"/>
    
    
    <category term="原创" scheme="http://example.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="MySQL" scheme="http://example.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>【原创】命令行下雨代码</title>
    <link href="http://example.com/2021/02/19/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%8B%E9%9B%A8%E4%BB%A3%E7%A0%81/"/>
    <id>http://example.com/2021/02/19/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%B8%8B%E9%9B%A8%E4%BB%A3%E7%A0%81/</id>
    <published>2021-02-19T15:04:08.000Z</published>
    <updated>2021-06-29T15:08:36.518Z</updated>
    
    <content type="html"><![CDATA[<p>在命令行下雨的代码，冒充黑客帝国？（笑）<br>效果如下：<br><img src="https://img-blog.csdnimg.cn/20210629230608574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MjE5MDAxMQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>这玩意儿是会动的，刷刷刷刷 跟下雨的感觉一样。</p><p><strong>代码</strong>：</p><figure class="highlight routeros"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs routeros">@echo off<br>title digitalrain<br>color 0b<br>setlocal ENABLEDELAYEDEXPANSION<br><span class="hljs-keyword">for</span> /l %%i <span class="hljs-keyword">in</span> (0) <span class="hljs-keyword">do</span> (<br><span class="hljs-builtin-name">set</span> <span class="hljs-string">&quot;line=&quot;</span><br><span class="hljs-keyword">for</span> /l %%j <span class="hljs-keyword">in</span> (1,1,80) <span class="hljs-keyword">do</span> (<br><span class="hljs-builtin-name">set</span> /a Down%%<span class="hljs-attribute">j-</span>=2<br><span class="hljs-builtin-name">set</span> <span class="hljs-string">&quot;x=!Down%%j!&quot;</span><br><span class="hljs-keyword">if</span> !x! LSS 0 (<br><span class="hljs-builtin-name">set</span> /a Arrow%%<span class="hljs-attribute">j</span>=!random!%%3<br><span class="hljs-builtin-name">set</span> /a Down%%<span class="hljs-attribute">j</span>=!random!%%15+10<br>)<br><span class="hljs-builtin-name">set</span> <span class="hljs-string">&quot;x=!Arrow%%j!&quot;</span><br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;!x!&quot;</span> == <span class="hljs-string">&quot;2&quot;</span> (<br><span class="hljs-builtin-name">set</span> <span class="hljs-string">&quot;line=!line!!random:~-1! &quot;</span><br>) <span class="hljs-keyword">else</span> (<span class="hljs-builtin-name">set</span> <span class="hljs-string">&quot;line=!line! &quot;</span>)<br>)<br><span class="hljs-builtin-name">set</span> /<span class="hljs-attribute">p</span>=!line!&lt;nul<br>)<br></code></pre></div></td></tr></table></figure><p><strong>步骤</strong>：</p><ol><li>新建一个txt</li><li>粘贴上边代码</li><li>保存并关闭</li><li>修改后缀为”.bat”</li><li>双击打开~</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在命令行下雨的代码，冒充黑客帝国？（笑）&lt;br&gt;效果如下：&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/20210629230608574.png?x-oss-process=image/watermark,type_ZmFuZ3poZ</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【原创】【JavaScript】获取密码文本框内的值</title>
    <link href="http://example.com/2021/02/19/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E3%80%90JavaScript%E3%80%91%E8%8E%B7%E5%8F%96%E5%AF%86%E7%A0%81%E6%96%87%E6%9C%AC%E6%A1%86%E5%86%85%E7%9A%84%E5%80%BC/"/>
    <id>http://example.com/2021/02/19/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E3%80%90JavaScript%E3%80%91%E8%8E%B7%E5%8F%96%E5%AF%86%E7%A0%81%E6%96%87%E6%9C%AC%E6%A1%86%E5%86%85%E7%9A%84%E5%80%BC/</id>
    <published>2021-02-19T15:00:14.000Z</published>
    <updated>2021-06-29T15:02:25.677Z</updated>
    
    <content type="html"><![CDATA[<p>F12打开调试器，输入下边代码可以得到密码文本框内的密文密码。有时候忘记密码了但懒得改密码，可以用到~</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">document</span>.querySelector(<span class="hljs-string">&quot;input[type=password]&quot;</span>).value);<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;F12打开调试器，输入下边代码可以得到密码文本框内的密文密码。有时候忘记密码了但懒得改密码，可以用到~&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter hljs&quot;&gt;&lt;div clas</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://example.com/categories/JavaScript/"/>
    
    
    <category term="原创" scheme="http://example.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>【原创】【JavaScript】魔方打乱步骤随机生成</title>
    <link href="http://example.com/2021/02/19/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E3%80%90JavaScript%E3%80%91%E9%AD%94%E6%96%B9%E6%89%93%E4%B9%B1%E6%AD%A5%E9%AA%A4%E9%9A%8F%E6%9C%BA%E7%94%9F%E6%88%90/"/>
    <id>http://example.com/2021/02/19/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E3%80%90JavaScript%E3%80%91%E9%AD%94%E6%96%B9%E6%89%93%E4%B9%B1%E6%AD%A5%E9%AA%A4%E9%9A%8F%E6%9C%BA%E7%94%9F%E6%88%90/</id>
    <published>2021-02-19T14:55:53.000Z</published>
    <updated>2021-06-29T14:58:05.114Z</updated>
    
    <content type="html"><![CDATA[<p>三阶魔方打乱码，随机生成js版本。</p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript">(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkmove</span>(<span class="hljs-params">move, arr</span>) </span>&#123; <span class="hljs-comment">// 检测步骤合理性</span><br>        <span class="hljs-keyword">var</span> l = arr.length;<br>        <span class="hljs-keyword">return</span> move == arr[l - <span class="hljs-number">1</span>] || (move == arr[l - <span class="hljs-number">2</span>] &amp;&amp; (move / <span class="hljs-number">2</span> | <span class="hljs-number">0</span>) == (arr[l - <span class="hljs-number">1</span>] / <span class="hljs-number">2</span> | <span class="hljs-number">0</span>));<br>    &#125;<br> <br>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">rndCube</span>(<span class="hljs-params">maxSteps</span>) </span>&#123; <span class="hljs-comment">// 生成随机打乱步骤</span><br>        <span class="hljs-keyword">var</span> cubeArr = [], <span class="hljs-comment">// 打乱步骤数组</span><br>            cubeStr = <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-comment">// 打乱步骤字符串</span><br>            cube = [<span class="hljs-string">&quot;R&quot;</span>, <span class="hljs-string">&quot;L&quot;</span>, <span class="hljs-string">&quot;F&quot;</span>, <span class="hljs-string">&quot;B&quot;</span>, <span class="hljs-string">&quot;U&quot;</span>, <span class="hljs-string">&quot;D&quot;</span>], <span class="hljs-comment">// 步骤</span><br>            types = [<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-string">&quot;&#x27;&quot;</span>, <span class="hljs-string">&quot;2&quot;</span>], <span class="hljs-comment">// 步骤附加条件</span><br>            r, <span class="hljs-comment">// 随机数</span><br>            i;<br> <br>        maxSteps = maxSteps || <span class="hljs-number">25</span><br> <br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; maxSteps; i++) &#123;<br>            <span class="hljs-keyword">do</span> &#123;<br>                r = <span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">6</span> | <span class="hljs-number">0</span>;<br>            &#125; <span class="hljs-keyword">while</span> (checkmove(r, cubeArr));<br>            cubeArr.push(r);<br>            cubeStr += cube[r] + types[<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">5</span> | <span class="hljs-number">0</span>] + <span class="hljs-string">&quot; &quot;</span>;<br>        &#125;<br> <br>        <span class="hljs-keyword">return</span> cubeStr;<br>    &#125;<br> <br>    <span class="hljs-built_in">console</span>.log(rndCube());<br>&#125;)();<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;三阶魔方打乱码，随机生成js版本。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter hljs&quot;&gt;&lt;div class=&quot;hljs code-wrapper&quot;&gt;&lt;pre&gt;&lt;span c</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://example.com/categories/JavaScript/"/>
    
    
    <category term="原创" scheme="http://example.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>【原创】【CSS】查看UI布局神器</title>
    <link href="http://example.com/2021/02/19/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E3%80%90CSS%E3%80%91%E6%9F%A5%E7%9C%8BUI%E5%B8%83%E5%B1%80%E7%A5%9E%E5%99%A8/"/>
    <id>http://example.com/2021/02/19/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E3%80%90CSS%E3%80%91%E6%9F%A5%E7%9C%8BUI%E5%B8%83%E5%B1%80%E7%A5%9E%E5%99%A8/</id>
    <published>2021-02-19T14:52:14.000Z</published>
    <updated>2021-06-29T14:57:07.367Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight css"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs css">* &#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#000</span> <span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">color</span>: <span class="hljs-number">#0f0</span> <span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">outline</span>: solid <span class="hljs-number">#f00</span> <span class="hljs-number">1px</span> <span class="hljs-meta">!important</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter hljs&quot;&gt;&lt;div class=&quot;hljs code-wrapper&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span cl</summary>
      
    
    
    
    <category term="CSS" scheme="http://example.com/categories/CSS/"/>
    
    
    <category term="原创" scheme="http://example.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="CSS" scheme="http://example.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>【原创】【JavaScript】menu固定</title>
    <link href="http://example.com/2021/02/19/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E3%80%90JavaScript%E3%80%91menu%E5%9B%BA%E5%AE%9A/"/>
    <id>http://example.com/2021/02/19/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E3%80%90JavaScript%E3%80%91menu%E5%9B%BA%E5%AE%9A/</id>
    <published>2021-02-19T14:49:10.000Z</published>
    <updated>2021-06-29T14:54:01.158Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> oTop = $(<span class="hljs-string">&quot;.nav&quot;</span>).offset().top;<br>    <span class="hljs-comment">//获取导航栏的高度，此高度用于保证内容的平滑过渡    </span><br><span class="hljs-keyword">var</span> martop = $(<span class="hljs-string">&#x27;.nav&#x27;</span>).outerHeight();     <br><span class="hljs-keyword">var</span> sTop = <span class="hljs-number">0</span>;    <br><span class="hljs-comment">// 监听页面的滚动    </span><br>$(<span class="hljs-built_in">window</span>).scroll(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;       <br><span class="hljs-comment">// 获取页面向上滚动的距离        </span><br>sTop = $(<span class="hljs-built_in">this</span>).scrollTop();       <br> <span class="hljs-comment">// 当导航栏到达屏幕顶端       </span><br> <span class="hljs-keyword">if</span> (sTop &gt;= oTop) &#123;            <br><span class="hljs-comment">// 修改导航栏position属性，使之固定在屏幕顶端            </span><br>$(<span class="hljs-string">&quot;.nav&quot;</span>).css(&#123; <span class="hljs-string">&quot;position&quot;</span>: <span class="hljs-string">&quot;fixed&quot;</span>, <span class="hljs-string">&quot;top&quot;</span>: <span class="hljs-string">&quot;0&quot;</span> &#125;);            <br><span class="hljs-comment">// 修改内容的margin-top值，保证平滑过渡            </span><br>$(<span class="hljs-string">&quot;.content&quot;</span>).css(&#123; <span class="hljs-string">&quot;margin-top&quot;</span>: martop &#125;);       <br> &#125; <span class="hljs-keyword">else</span> &#123;            <br><span class="hljs-comment">// 当导航栏脱离屏幕顶端时，回复原来的属性           </span><br> $(<span class="hljs-string">&quot;.nav&quot;</span>).css(&#123; <span class="hljs-string">&quot;position&quot;</span>: <span class="hljs-string">&quot;static&quot;</span> &#125;);            <br>$(<span class="hljs-string">&quot;.content&quot;</span>).css(&#123; <span class="hljs-string">&quot;margin-top&quot;</span>: <span class="hljs-string">&quot;0&quot;</span> &#125;);        <br>&#125;    <br>&#125;);<br><br></code></pre></div></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter hljs&quot;&gt;&lt;div class=&quot;hljs code-wrapper&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;</summary>
      
    
    
    
    <category term="JavaScript" scheme="http://example.com/categories/JavaScript/"/>
    
    
    <category term="原创" scheme="http://example.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>【原创】【Python】爬虫</title>
    <link href="http://example.com/2021/02/19/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E3%80%90Python%E3%80%91%E7%88%AC%E8%99%AB/"/>
    <id>http://example.com/2021/02/19/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E3%80%90Python%E3%80%91%E7%88%AC%E8%99%AB/</id>
    <published>2021-02-19T14:45:41.000Z</published>
    <updated>2021-06-29T15:43:15.406Z</updated>
    
    <content type="html"><![CDATA[<p>首先声明，一般情况下，以下代码是不适合你的哈！因为网址格式可能会不同，反爬等级也不同。QAQ</p><p>我这个爬虫是有一阵子用来从某个网站看盗版小说，但是怕网站哪天倒了，小说就没了，所以爬下来了哈哈~<br>当然这个行为肯定是不好的，而且我现在小说看的少了，所以都会支持一下正版了！（顺便吐槽下辰东真是越来越糊弄了 -A-/）</p><figure class="highlight python"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs python"><span class="hljs-comment"># coding=utf-8</span><br><span class="hljs-keyword">import</span> requests,os<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> Tag<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getHtml</span>(<span class="hljs-params">url</span>):</span><br>    page = requests.get(url)<br>    html = page.text<br>    <span class="hljs-keyword">return</span> html<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getText</span>(<span class="hljs-params">html</span>):</span><br>    get_text = Tag.get_text<br>    soup = BeautifulSoup(html, <span class="hljs-string">&#x27;html.parser&#x27;</span>)<br>    list_info = soup.find_all(<span class="hljs-string">&#x27;div&#x27;</span>, class_=<span class="hljs-string">&#x27;content box&#x27;</span>)<br>    listtext  = [x.get_text() <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> list_info]<br>    <span class="hljs-keyword">return</span> listtext<br><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment">#生成目录位置</span><br>    file_path = os.path.join(os.getcwd(), <span class="hljs-string">&#x27;file&#x27;</span>, <span class="hljs-string">&#x27;名字.txt&#x27;</span>)<br>    s=<span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-number">6</span>):<br>        a=<span class="hljs-built_in">str</span>(i)<br>        <span class="hljs-comment">#被爬的网</span><br>        url = (<span class="hljs-string">&quot;https://网站/7/%s.html&quot;</span>%a  )<br>        print(a)<br>        html = getHtml(url)<br>        <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(getText(html))):<br>            s+=getText(html)[x]<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(file_path, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f1:<br>        f1.write(s)<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;首先声明，一般情况下，以下代码是不适合你的哈！因为网址格式可能会不同，反爬等级也不同。QAQ&lt;/p&gt;
&lt;p&gt;我这个爬虫是有一阵子用来从某个网站看盗版小说，但是怕网站哪天倒了，小说就没了，所以爬下来了哈哈~&lt;br&gt;当然这个行为肯定是不好的，而且我现在小说看的少了，所以都会支持</summary>
      
    
    
    
    <category term="Python" scheme="http://example.com/categories/Python/"/>
    
    
    <category term="原创" scheme="http://example.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
    <category term="Python" scheme="http://example.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>【转载】修改Win10登录界面背景图</title>
    <link href="http://example.com/2021/02/09/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E4%BF%AE%E6%94%B9Win10%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E8%83%8C%E6%99%AF%E5%9B%BE/"/>
    <id>http://example.com/2021/02/09/%E3%80%90%E8%BD%AC%E8%BD%BD%E3%80%91%E4%BF%AE%E6%94%B9Win10%E7%99%BB%E5%BD%95%E7%95%8C%E9%9D%A2%E8%83%8C%E6%99%AF%E5%9B%BE/</id>
    <published>2021-02-09T15:27:05.000Z</published>
    <updated>2021-06-29T15:28:43.672Z</updated>
    
    <content type="html"><![CDATA[<p>将图片直接放到这个路径下就可以了：<br>C:\Windows\System32\oobe\info\Backgrounds</p><p><strong>注意</strong>：</p><ul><li>图片名称不能变，必须用 Backgrounds</li><li>小于250kb</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;将图片直接放到这个路径下就可以了：&lt;br&gt;C:\Windows\System32\oobe\info\Backgrounds&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;图片名称不能变，必须用 Backgrounds&lt;/li&gt;
&lt;li&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>【原创】开篇</title>
    <link href="http://example.com/2021/01/28/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E5%BC%80%E7%AF%87/"/>
    <id>http://example.com/2021/01/28/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91%E5%BC%80%E7%AF%87/</id>
    <published>2021-01-28T00:57:25.000Z</published>
    <updated>2021-01-28T00:59:38.265Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>合抱之木,生于毫末——《老子》</p></blockquote><p>Hi ~<br>欢迎来到这里 ！<br>今天开始，博客就要正式开始运营了</p><p>这里主要用来记录一些学习、工作过程中遇见的问题以及解决的方案。<br>留下些文字，加深自己的记忆，同时也给大家提供思路，如果能多多少少对谁有些帮助，那我会非常高兴 ~</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;合抱之木,生于毫末——《老子》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hi ~&lt;br&gt;欢迎来到这里 ！&lt;br&gt;今天开始，博客就要正式开始运营了&lt;/p&gt;
&lt;p&gt;这里主要用来记录一些学习、工作过程中遇见的问题以及解决的方案。&lt;br&gt;留下些文字，加深</summary>
      
    
    
    
    
    <category term="原创" scheme="http://example.com/tags/%E5%8E%9F%E5%88%9B/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/12/29/hello-world/"/>
    <id>http://example.com/2020/12/29/hello-world/</id>
    <published>2020-12-29T05:49:08.112Z</published>
    <updated>2020-12-29T05:49:08.112Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo server<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo generate<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
